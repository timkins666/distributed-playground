  # kafka:
  #   image: bitnami/kafka:latest
  #   environment:
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_CFG_PROCESS_ROLES=broker,controller
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
  #   ports: ["9092:9092"]
  #   healthcheck:
  #     test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
  #     interval: 5s
  #     retries: 6

  # cassandra:
  #   image: cassandra:4.1
  #   ports: ["9042:9042"]
  #   healthcheck:
  #     test: ["CMD", "cqlsh", "-e", "DESCRIBE KEYSPACES"]
  #     interval: 5s
  #     retries: 6

  # cassandra-init:
  #   image: cassandra:4.1
  #   depends_on:
  #     cassandra:
  #       condition: service_healthy
  #   entrypoint: ["sh","-c","cqlsh cassandra -f /schema/init.cql"]
  #   volumes:
  #     - ./db/cassandra-init:/schema

  # postgres:
  #   image: postgres:15
  #   environment:
  #     POSTGRES_USER: me
  #     POSTGRES_PASSWORD: me
  #   ports: ["5432:5432"]

  # postgres-init:
  #   image: postgres:15
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   entrypoint: ["sh","-c","psql -h postgres -U me -f /schema/init.sql"]
  #   volumes:
  #     - ./db/postgres-init:/schema

x-common-variables: &common-vars
  APP_PORT: 8080
  AUTH_PORT: 8081
  FRONTEND_PORT: 5173
  KAFKA_BROKER: kafka:9092

services:
  auth-service:
    build: ./services/auth-service
    environment:
      <<: *common-vars
      POSTGRES_HOST: postgres
    ports:
      - "4000:4000"
      - "8081:8081"

  frontend:
    container_name: frontend
    build:
      context: ./web-client       # ← Important: set build context
    ports:
      - "5173:5173"               # Vite dev server port
    volumes:
      - ./web-client:/app         # Live reload app files
      - /app/node_modules         # Prevent host node_modules override
    working_dir: /app
    environment:
      <<: *common-vars
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: true
    command: npm run dev -- --host

  # account-service:
  #   build: ./services/account-service
  #   environment:
  #     - POSTGRES_HOST=postgres

  # payment-service:
  #   build: ./services/payment-service
  #   environment:
  #     - KAFKA_BROKER=kafka:9092
  #     - CASSANDRA_HOST=cassandra
  #   depends_on:
  #     cassandra-init:
  #       condition: service_completed_successfully
  #     kafka:
  #       condition: service_healthy

  # api-gateway:
  #   build: ./services/api-gateway
  #   ports: ["8080:8080"]
  #   depends_on:
  #     - auth-service
  #     - account-service
  #     - payment-service

 
